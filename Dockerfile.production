FROM node:20-alpine AS base

# Install dependencies only when needed
FROM base AS deps
# Check https://github.com/nodejs/docker-node/tree/b4117f9333da4138b03a546ec926ef50a31506c3#nodealpine to understand why libc6-compat might be needed.
RUN apk add --no-cache libc6-compat
WORKDIR /app

# Install dependencies based on the preferred package manager
COPY package.json .npmrc ./
ENV NPM_CONFIG_REGISTRY=https://registry.npmjs.org/
RUN npm install

# Production image, copy all the files and run next
FROM base AS runner
WORKDIR /app

ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1

RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

# Copy the built application from the builder stage
COPY --from=deps /app/node_modules ./node_modules
COPY . .

# Create environment file for production
RUN echo "NEXT_PUBLIC_BASE_URL=http://localhost:3000" > .env
RUN echo "NODE_ENV=development" >> .env
RUN echo "NEXT_TELEMETRY_DISABLED=1" >> .env

# Create .next directory with correct permissions
RUN mkdir -p .next && chown -R nextjs:nodejs .next

USER nextjs

EXPOSE 3000

ENV PORT=3000
ENV HOSTNAME="0.0.0.0"

# Run the application in development mode to avoid build issues
CMD ["npm", "run", "dev"]